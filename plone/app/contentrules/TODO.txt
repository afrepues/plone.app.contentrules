============================
plone.app.contentrules to-do
============================

 Known issues
 ------------
 
  - Move-to-folder, copy-to-folder actions require the user to know
    absolute Zope physical paths, which sucks. We need a decent selection
    wiget!
 
  - Add and edit forms don't use Plone styling
    -> need to integate with plone.app.form
    
  - Tests for event handling not in place
  
  - We depend on plone.app.controlpanel for now, because we use its named
    vocabularies (AvailablePortalTypes and AvailableWorkflowStates)
    
 Design
 ------
 
  - Re-visit reliance on Node
      - consider pattern in zope.app.content, marking element interfaces like
        ILoggerAction with an IInterface like IRuleActionType
      - queryType() can find such interfaces
      - the interface may tell us enough about a type
          - how to get name, description of the element type?
          - how to get edit view (can rely on edit.html convention)

 Views
 -----
 
   - UI for re-ordering rules?
      
 Conditions
 ----------
 
  Make a "disjunction" pseudo-condition to allow "or'ing" of conditions.
    
    When multiple conditions are in effect, they become a conjunction, since
    any condition can veto the next step and cancel rule execution. We could
    have a "containerish" condition that provided add/remove functionality
    for multiple conditions and, upon execution, did all and returned True
    if any returned True. This should otherwise mimic the add/edit environment
    so that any condition could be used.
    
 Actions
 -------
  
  Add more actions, such as:

  - Rename
     need some kind of pattern for it to be useful, otherwise you hardcode
     the new name and it only works once...
     
  - Send email